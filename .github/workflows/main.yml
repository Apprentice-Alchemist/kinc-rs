name: Build

on: [push]

jobs:
  build:
    if: ${{ !contains(join(github.event.commits.*.message),'[skip ci]') }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            graphics: metal
          # - os: macos-latest
          #   target: aarch64-apple-ios
          #   graphics: metal
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            graphics: d3d11
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            graphics: d3d12
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            graphics: opengl
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            graphics: opengl
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            graphics: vulkan
          # - os: ubuntu-latest
          #   target: aarch64-linux-android
          #   graphics: opengl
          # - os: ubuntu-latest
          #   target: aarch64-linux-android
          #   graphics: vulkan
    steps:
      - name: Checkout KincHL
        uses: actions/checkout@v2
      - name: install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.61.0
          target: ${{ matrix.target }}
          profile: minimal
          override: true
          components: clippy

      - uses: Swatinem/rust-cache@v1

      - name: Get Kinc Tools
        run: |
          git submodule update --init
          Kinc/get_dlc

      - name: Get LunarG package list.
        if: matrix.graphics == 'vulkan'
        run: |
          wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-bionic.list http://packages.lunarg.com/vulkan/lunarg-vulkan-bionic.list
      - name: Apt Update
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update
        continue-on-error: true
      - name: Apt Install
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libasound2-dev libxinerama-dev libxrandr-dev libgl1-mesa-dev libxi-dev libxcursor-dev libudev-dev libwayland-dev wayland-protocols libxkbcommon-dev libvulkan-dev --yes --quiet
      - name: Install Vulkan SDK
        if: matrix.graphics == 'vulkan'
        run: sudo apt-get install vulkan-sdk

      - run: |
          cargo build -p shader --features=kinc/${{ matrix.graphics }} --target=${{ matrix.target }}
